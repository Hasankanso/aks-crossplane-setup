permissions: write-all
  
on: 
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+']

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: install helm
      run: 'curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash'
    - name: create upload directory
      run: mkdir release-packages
    - name: package charts
      run: 'helm package --version ${{ github.ref_name }} bootstrapper -d release-packages && helm package --version ${{ github.ref_name }} crossplane-setup -d release-packages'
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload bootstrapper chart
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-packages/bootstrapper-${{ github.ref_name }}.tgz
        asset_name: bootstrapper-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip
    - name: Upload crossplane-setup chart packages to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-packages/crossplane-setup-${{ github.ref_name }}.tgz
        asset_name: crossplane-setup-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip

          
